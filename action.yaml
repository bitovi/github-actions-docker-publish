# action.yml
name: 'Docker Build Tag Publish'
description: 'Build, Tag, and, and Publish a docker image'
branding: 
  icon: tag
  color: red
inputs:
  checkout:
    description: Checkout the repository
    required: false
    default: 'true'
  image_tag:
    description: Tag to override default Logic
    required: false
    default: ''
  use_sha:
    description: Use the SHA for the tag.  Overrides the default logic.
    required: false
    default: 'false'
  org_name:
    description: Docker org name.  
    required: false
    default: ''
  repo_name:
    description: Name of the docker repository
    required: false
    default: ''
  use_latest:
    description: Tag default branch with latest tag instead of branch name.
    required: false
    default: 'true'
  docker_username:
    description: Docker user
    required: true
  docker_password:
    description: Docker password
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout if required
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
          username: ${{ inputs.docker_username }}
          password: ${{ inputs.docker_password }}   
    
    - name: Build - Tag - Push
      shell: bash
      run: |
        DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
        IMAGE_TAG=${{ inputs.image_tag }}
        
        BRANCH_OR_TAG_NAME=${GITHUB_REF##*/}
        echo "BRANCH_OR_TAG_NAME: $BRANCH_OR_TAG_NAME"

        if [ -z "$IMAGE_TAG" ]; then
          if [[ ${{ inputs.use_sha }} == 'true' ]]; then
            IMAGE_TAG="$GITHUB_SHA"
          elif [ "$BRANCH_OR_TAG_NAME" == "$DEFAULT_BRANCH" ] && [ ${{ inputs.use_latest }} == 'true'  ]] ; then
            IMAGE_TAG="latest"
          elif [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            IMAGE_TAG="pr-${GITHUB_HEAD_REF}"
          else
            IMAGE_TAG="$BRANCH_OR_TAG_NAME"
          fi
        fi
        echo "Image_Tag: $IMAGE_TAG"

        if [ -z "${{ inputs.org_name }}" ] ; then
          ORG_NAME=$(echo $GITHUB_REPOSITORY | sed 's/\/.*//')
        else
          ORG_NAME="${{ inputs.org_name }}"
        fi

         if [ -z "${{ inputs.repo_name }}" ] ; then
          REPO_NAME=$(echo $GITHUB_REPOSITORY | sed 's/^.*\///')
        else
          REPO_NAME="${{ inputs.repo_name }}"
        fi

        IMAGE_NAME="$ORG_NAME/$REPO_NAME"

        echo "Building $IMAGE_NAME"
        docker build --pull -t $IMAGE_NAME:$IMAGE_TAG .

        echo "Pushing docker image $IMAGE_NAME:$IMAGE_TAG"
        docker push $IMAGE_NAME:$IMAGE_TAG